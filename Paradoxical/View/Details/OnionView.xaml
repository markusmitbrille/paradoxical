<UserControl
    x:Class="Paradoxical.View.OnionView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:view="clr-namespace:Paradoxical.View"
    xmlns:viewmodel="clr-namespace:Paradoxical.ViewModel"
    xmlns:converters="clr-namespace:Paradoxical.Converters"
    xmlns:rules="clr-namespace:Paradoxical.ValidationRules"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    d:DataContext="{d:DesignInstance {x:Type viewmodel:OnionViewModel}}"
    mc:Ignorable="d"
    d:DesignWidth="800">

    <TabControl
        Padding="20">

        <TabItem
            x:Name="OnionTab"
            Header="On-Action">
            <StackPanel>

                <TextBox
                    materialDesign:HintAssist.Hint="Name">

                    <TextBox.Text>
                        <Binding
                            Path="Name"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged"
                            FallbackValue="element_name">
                            <Binding.ValidationRules>
                                <rules:RequiredRule
                                    ValidatesOnTargetUpdated="True" />
                                <rules:NameRule
                                    ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>

                <Grid
                    Grid.Row="0">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="1*" />
                        <ColumnDefinition
                            Width="auto" />
                    </Grid.ColumnDefinitions>

                    <TextBox
                        Grid.Column="0"
                        materialDesign:HintAssist.Hint="Weight">

                        <TextBox.Text>
                            <Binding
                                Path="Weight"
                                Mode="TwoWay"
                                UpdateSourceTrigger="PropertyChanged"
                                FallbackValue="0">
                                <Binding.ValidationRules>
                                    <rules:IntRule
                                        ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>

                    </TextBox>

                    <CheckBox
                        Grid.Column="1"
                        Content="Random"
                        IsChecked="{Binding Random, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}" />

                </Grid>

            </StackPanel>
        </TabItem>

    </TabControl>

</UserControl>

<UserControl
    x:Class="Paradoxical.View.ContentPageView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:core="clr-namespace:Paradoxical.Core"
    xmlns:view="clr-namespace:Paradoxical.View"
    xmlns:viewmodel="clr-namespace:Paradoxical.ViewModel"
    xmlns:converters="clr-namespace:Paradoxical.Converters"
    xmlns:rules="clr-namespace:Paradoxical.ValidationRules"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance {x:Type viewmodel:ContentPageViewModel}}"
    d:DesignWidth="800">

    <UserControl.InputBindings>
        <KeyBinding
            Command="{Binding FindCommand}"
            Gesture="CTRL+F" />
    </UserControl.InputBindings>

    <DockPanel>

        <ToolBarTray
            DockPanel.Dock="Top"
            Margin="20">
            <ToolBar
                ClipToBounds="True"
                Style="{StaticResource MaterialDesignToolBar}">

                <ToolBar.Resources>

                    <Style
                        TargetType="Menu"
                        BasedOn="{StaticResource MaterialDesignMenu}">

                        <Setter
                            Property="VerticalAlignment"
                            Value="Center" />

                    </Style>

                </ToolBar.Resources>

                <Menu>
                    <MenuItem
                        Header="Apply"
                        Icon="{materialDesign:PackIcon Kind=ContentSave}"
                        Command="{Binding SaveCommand}" />
                </Menu>

                <Menu>
                    <MenuItem
                        Header="Reload"
                        Icon="{materialDesign:PackIcon Kind=Reload}"
                        Command="{Binding ReloadCommand}" />
                </Menu>

                <Menu>
                    <MenuItem
                        Header="Find…"
                        Icon="{materialDesign:PackIcon Kind=Search}"
                        Command="{Binding FindCommand}" />
                </Menu>

                <Separator />

                <Menu>
                    <MenuItem
                        Header="Create"
                        Icon="{materialDesign:PackIcon Kind=Add}">

                        <MenuItem
                            Header="Create Script"
                            Command="{Binding CreateScriptCommand}" />

                        <MenuItem
                            Header="Create Event"
                            Command="{Binding CreateEventCommand}" />

                        <MenuItem
                            Header="Create Decision"
                            Command="{Binding CreateDecisionCommand}" />

                    </MenuItem>
                </Menu>

                <Separator />

                <Menu>

                    <Menu.Visibility>
                        <Binding
                            Path="Selected"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged">

                            <Binding.Converter>
                                <converters:TypeVisibilityConverter
                                    Type="{x:Type viewmodel:ScriptViewModel}" />
                            </Binding.Converter>

                        </Binding>
                    </Menu.Visibility>

                    <MenuItem
                        Header="Duplicate"
                        Icon="{materialDesign:PackIcon Kind=ContentDuplicate}"
                        Command="{Binding DuplicateScriptCommand}"
                        CommandParameter="{Binding Selected}" />

                    <MenuItem
                        Header="Delete"
                        Icon="{materialDesign:PackIcon Kind=Delete}"
                        Command="{Binding DeleteScriptCommand}"
                        CommandParameter="{Binding Selected}" />

                </Menu>

                <Menu>

                    <Menu.Visibility>
                        <Binding
                            Path="Selected"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged">

                            <Binding.Converter>
                                <converters:TypeVisibilityConverter
                                    Type="{x:Type viewmodel:EventViewModel}" />
                            </Binding.Converter>

                        </Binding>
                    </Menu.Visibility>

                    <MenuItem
                        Header="Duplicate"
                        Icon="{materialDesign:PackIcon Kind=ContentDuplicate}"
                        Command="{Binding DuplicateEventCommand}"
                        CommandParameter="{Binding Selected}" />

                    <MenuItem
                        Header="Delete"
                        Icon="{materialDesign:PackIcon Kind=Delete}"
                        Command="{Binding DeleteEventCommand}"
                        CommandParameter="{Binding Selected}" />

                    <MenuItem
                        Header="Create Option"
                        Icon="{materialDesign:PackIcon Kind=Add}"
                        Command="{Binding CreateEventOptionCommand}"
                        CommandParameter="{Binding Selected}" />

                    <MenuItem
                        Header="Create On-Action"
                        Icon="{materialDesign:PackIcon Kind=Add}"
                        Command="{Binding CreateEventOnionCommand}"
                        CommandParameter="{Binding Selected}" />

                </Menu>

                <Menu>

                    <Menu.Visibility>
                        <Binding
                            Path="Selected"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged">

                            <Binding.Converter>
                                <converters:TypeVisibilityConverter
                                    Type="{x:Type viewmodel:OptionViewModel}" />
                            </Binding.Converter>

                        </Binding>
                    </Menu.Visibility>

                    <MenuItem
                        Header="Duplicate"
                        Icon="{materialDesign:PackIcon Kind=ContentDuplicate}"
                        Command="{Binding DuplicateOptionCommand}"
                        CommandParameter="{Binding Selected}" />

                    <MenuItem
                        Header="Delete"
                        Icon="{materialDesign:PackIcon Kind=Delete}"
                        Command="{Binding DeleteOptionCommand}"
                        CommandParameter="{Binding Selected}" />

                    <MenuItem
                        Header="Create Linked Event"
                        Icon="{materialDesign:PackIcon Kind=Add}"
                        Command="{Binding CreateOptionEventCommand}"
                        CommandParameter="{Binding Selected}" />

                    <MenuItem
                        Header="Link Event…"
                        Icon="{materialDesign:PackIcon Kind=LinkAdd}"
                        Command="{Binding CreateOptionLinkCommand}"
                        CommandParameter="{Binding Selected}" />

                </Menu>

                <Menu>

                    <Menu.Visibility>
                        <Binding
                            Path="Selected"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged">

                            <Binding.Converter>
                                <converters:TypeVisibilityConverter
                                    Type="{x:Type viewmodel:OnionViewModel}" />
                            </Binding.Converter>

                        </Binding>
                    </Menu.Visibility>

                    <MenuItem
                        Header="Duplicate"
                        Icon="{materialDesign:PackIcon Kind=ContentDuplicate}"
                        Command="{Binding DuplicateOnionCommand}"
                        CommandParameter="{Binding Selected}" />

                    <MenuItem
                        Header="Delete"
                        Icon="{materialDesign:PackIcon Kind=Delete}"
                        Command="{Binding DeleteOnionCommand}"
                        CommandParameter="{Binding Selected}" />

                </Menu>

                <Menu>

                    <Menu.Visibility>
                        <Binding
                            Path="Selected"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged">

                            <Binding.Converter>
                                <converters:TypeVisibilityConverter
                                    Type="{x:Type viewmodel:DecisionViewModel}" />
                            </Binding.Converter>

                        </Binding>
                    </Menu.Visibility>

                    <MenuItem
                        Header="Duplicate"
                        Icon="{materialDesign:PackIcon Kind=ContentDuplicate}"
                        Command="{Binding DuplicateDecisionCommand}"
                        CommandParameter="{Binding Selected}" />

                    <MenuItem
                        Header="Delete"
                        Icon="{materialDesign:PackIcon Kind=Delete}"
                        Command="{Binding DeleteDecisionCommand}"
                        CommandParameter="{Binding Selected}" />

                    <MenuItem
                        Header="Create Linked Event"
                        Icon="{materialDesign:PackIcon Kind=Add}"
                        Command="{Binding CreateDecisionEventCommand}"
                        CommandParameter="{Binding Selected}" />

                    <MenuItem
                        Header="Link Event…"
                        Icon="{materialDesign:PackIcon Kind=LinkAdd}"
                        Command="{Binding CreateDecisionLinkCommand}"
                        CommandParameter="{Binding Selected}" />

                </Menu>

            </ToolBar>
        </ToolBarTray>

        <TabControl
            DockPanel.Dock="Left"
            Padding="0,20">

            <TabItem
                x:Name="ContentTreeTab"
                Header="Content Tree">
                <TreeView
                    x:Name="ContentTreeView"
                    Margin="6,12"
                    Width="350"
                    ItemsSource="{Binding RootNode.Children}"
                    VirtualizingStackPanel.IsVirtualizing="False"
                    VirtualizingStackPanel.VirtualizationMode="Recycling"
                    ScrollViewer.IsDeferredScrollingEnabled="True">

                    <i:Interaction.Triggers>
                        <i:EventTrigger
                            EventName="SelectedItemChanged">
                            <i:InvokeCommandAction
                                Command="{Binding SelectNodeObservableCommand}"
                                CommandParameter="{Binding ElementName=ContentTreeView, Path=SelectedItem}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <TreeView.ItemContainerStyle>
                        <Style
                            TargetType="TreeViewItem"
                            BasedOn="{StaticResource MaterialDesignTreeViewItem}">

                            <Setter
                                Property="Padding"
                                Value="2" />

                            <Setter
                                Property="Margin"
                                Value="0" />

                            <Setter
                                Property="IsSelected"
                                Value="{Binding IsSelected, Mode=TwoWay}" />

                            <Setter
                                Property="IsExpanded"
                                Value="{Binding IsExpanded, Mode=TwoWay}" />

                            <EventSetter
                                Event="Selected"
                                Handler="TreeViewItemSelectedHandler" />

                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.Resources>

                        <HierarchicalDataTemplate
                            DataType="{x:Type core:Node}"
                            ItemsSource="{Binding Children}">
                            <Grid>

                                <TextBlock
                                    Text="{Binding Header}" />

                            </Grid>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate
                            DataType="{x:Type viewmodel:ModNode}"
                            ItemsSource="{Binding Children}">
                            <Grid>

                                <Grid.ContextMenu>
                                    <ContextMenu>

                                        <MenuItem
                                            Header="Edit"
                                            Icon="{materialDesign:PackIcon Kind=Edit}"
                                            Command="{Binding EditCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <Separator />

                                        <MenuItem
                                            Header="Create Script"
                                            Command="{Binding CreateScriptCommand}" />

                                        <MenuItem
                                            Header="Create Event"
                                            Command="{Binding CreateEventCommand}" />

                                        <MenuItem
                                            Header="Create Decision"
                                            Command="{Binding CreateDecisionCommand}" />

                                    </ContextMenu>
                                </Grid.ContextMenu>

                                <TextBlock
                                    Text="{Binding Observable.ModName}" />

                            </Grid>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate
                            DataType="{x:Type viewmodel:ScriptNode}"
                            ItemsSource="{Binding Children}">
                            <Grid>

                                <Grid.ContextMenu>
                                    <ContextMenu>

                                        <MenuItem
                                            Header="Edit"
                                            Icon="{materialDesign:PackIcon Kind=Edit}"
                                            Command="{Binding EditCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <MenuItem
                                            Header="Duplicate"
                                            Icon="{materialDesign:PackIcon Kind=ContentDuplicate}"
                                            Command="{Binding DuplicateCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <MenuItem
                                            Header="Delete"
                                            Icon="{materialDesign:PackIcon Kind=Delete}"
                                            Command="{Binding DeleteCommand}"
                                            CommandParameter="{Binding Observable}" />

                                    </ContextMenu>
                                </Grid.ContextMenu>

                                <TextBlock
                                    Text="{Binding Observable.File}" />

                            </Grid>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate
                            DataType="{x:Type viewmodel:EventNode}"
                            ItemsSource="{Binding Children}">
                            <Grid>

                                <Grid.ContextMenu>
                                    <ContextMenu>

                                        <MenuItem
                                            Header="Edit"
                                            Icon="{materialDesign:PackIcon Kind=Edit}"
                                            Command="{Binding EditCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <MenuItem
                                            Header="Duplicate"
                                            Icon="{materialDesign:PackIcon Kind=ContentDuplicate}"
                                            Command="{Binding DuplicateCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <MenuItem
                                            Header="Delete"
                                            Icon="{materialDesign:PackIcon Kind=Delete}"
                                            Command="{Binding DeleteCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <Separator />

                                        <MenuItem
                                            Header="Create Option"
                                            Icon="{materialDesign:PackIcon Kind=Add}"
                                            Command="{Binding CreateOptionCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <MenuItem
                                            Header="Create On-Action"
                                            Icon="{materialDesign:PackIcon Kind=Add}"
                                            Command="{Binding CreateOnionCommand}"
                                            CommandParameter="{Binding Observable}" />

                                    </ContextMenu>
                                </Grid.ContextMenu>

                                <TextBlock
                                    Text="{Binding Observable.Name}" />

                            </Grid>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate
                            DataType="{x:Type viewmodel:PortraitNode}"
                            ItemsSource="{Binding Children}">
                            <Grid>

                                <Grid.ContextMenu>
                                    <ContextMenu>

                                        <MenuItem
                                            Header="Edit"
                                            Icon="{materialDesign:PackIcon Kind=Edit}"
                                            Command="{Binding EditCommand}"
                                            CommandParameter="{Binding Observable}" />

                                    </ContextMenu>
                                </Grid.ContextMenu>

                                <TextBlock
                                    Text="{Binding Observable.Position}" />

                            </Grid>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate
                            DataType="{x:Type viewmodel:OptionNode}"
                            ItemsSource="{Binding Children}">
                            <Grid>

                                <Grid.ContextMenu>
                                    <ContextMenu>

                                        <MenuItem
                                            Header="Edit"
                                            Icon="{materialDesign:PackIcon Kind=Edit}"
                                            Command="{Binding EditCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <MenuItem
                                            Header="Duplicate"
                                            Icon="{materialDesign:PackIcon Kind=ContentDuplicate}"
                                            Command="{Binding DuplicateCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <MenuItem
                                            Header="Delete"
                                            Icon="{materialDesign:PackIcon Kind=Delete}"
                                            Command="{Binding DeleteCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <Separator />

                                        <MenuItem
                                            Header="Create Linked Event"
                                            Icon="{materialDesign:PackIcon Kind=Add}"
                                            Command="{Binding CreateEventCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <MenuItem
                                            Header="Link Event…"
                                            Icon="{materialDesign:PackIcon Kind=LinkAdd}"
                                            Command="{Binding LinkCommand}"
                                            CommandParameter="{Binding Observable}" />

                                    </ContextMenu>
                                </Grid.ContextMenu>

                                <TextBlock
                                    Text="{Binding Observable.Name}" />

                            </Grid>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate
                            DataType="{x:Type viewmodel:OnionNode}"
                            ItemsSource="{Binding Children}">
                            <Grid>

                                <Grid.ContextMenu>
                                    <ContextMenu>

                                        <MenuItem
                                            Header="Edit"
                                            Icon="{materialDesign:PackIcon Kind=Edit}"
                                            Command="{Binding EditCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <MenuItem
                                            Header="Duplicate"
                                            Icon="{materialDesign:PackIcon Kind=ContentDuplicate}"
                                            Command="{Binding DuplicateCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <MenuItem
                                            Header="Delete"
                                            Icon="{materialDesign:PackIcon Kind=Delete}"
                                            Command="{Binding DeleteCommand}"
                                            CommandParameter="{Binding Observable}" />

                                    </ContextMenu>
                                </Grid.ContextMenu>

                                <TextBlock
                                    Text="{Binding Observable.Name}" />

                            </Grid>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate
                            DataType="{x:Type viewmodel:DecisionNode}"
                            ItemsSource="{Binding Children}">
                            <Grid>

                                <Grid.ContextMenu>
                                    <ContextMenu>

                                        <MenuItem
                                            Header="Edit"
                                            Icon="{materialDesign:PackIcon Kind=Edit}"
                                            Command="{Binding EditCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <MenuItem
                                            Header="Duplicate"
                                            Icon="{materialDesign:PackIcon Kind=ContentDuplicate}"
                                            Command="{Binding DuplicateCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <MenuItem
                                            Header="Delete"
                                            Icon="{materialDesign:PackIcon Kind=Delete}"
                                            Command="{Binding DeleteCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <Separator />

                                        <MenuItem
                                            Header="Create Linked Event"
                                            Icon="{materialDesign:PackIcon Kind=Add}"
                                            Command="{Binding CreateEventCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <MenuItem
                                            Header="Link Event…"
                                            Icon="{materialDesign:PackIcon Kind=LinkAdd}"
                                            Command="{Binding LinkCommand}"
                                            CommandParameter="{Binding Observable}" />

                                    </ContextMenu>
                                </Grid.ContextMenu>

                                <TextBlock
                                    Text="{Binding Observable.Name}" />

                            </Grid>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate
                            DataType="{x:Type viewmodel:LinkNode}"
                            ItemsSource="{Binding Children}">
                            <Grid>

                                <Grid.ContextMenu>
                                    <ContextMenu>

                                        <MenuItem
                                            Header="Edit"
                                            Icon="{materialDesign:PackIcon Kind=Edit}"
                                            Command="{Binding EditCommand}"
                                            CommandParameter="{Binding Observable}" />

                                        <MenuItem
                                            Header="Delete"
                                            Icon="{materialDesign:PackIcon Kind=Delete}"
                                            Command="{Binding DeleteCommand}"
                                            CommandParameter="{Binding Observable}" />

                                    </ContextMenu>
                                </Grid.ContextMenu>

                                <StackPanel
                                    Orientation="Horizontal">

                                    <TextBlock>
                                        <Run>Link → </Run>
                                        <Run
                                            Text="{Binding EventNode.Observable.Name}" />
                                    </TextBlock>

                                </StackPanel>

                            </Grid>
                        </HierarchicalDataTemplate>

                    </TreeView.Resources>

                </TreeView>
            </TabItem>

        </TabControl>

        <ContentControl
            Content="{Binding Selected}">

            <ContentControl.Visibility>
                <Binding>
                    <Binding.Converter>
                        <converters:VisibilityConverter />
                    </Binding.Converter>
                </Binding>
            </ContentControl.Visibility>

        </ContentControl>

    </DockPanel>

</UserControl>

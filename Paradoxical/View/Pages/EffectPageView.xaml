<UserControl
    x:Class="Paradoxical.View.EffectPageView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:view="clr-namespace:Paradoxical.View"
    xmlns:viewmodel="clr-namespace:Paradoxical.ViewModel"
    xmlns:converters="clr-namespace:Paradoxical.Converters"
    xmlns:rules="clr-namespace:Paradoxical.ValidationRules"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance {x:Type viewmodel:EffectTableViewModel}}"
    d:DesignWidth="800">

    <DockPanel>

        <ToolBarTray
            DockPanel.Dock="Top"
            Margin="20">
            <ToolBar
                ClipToBounds="False"
                Style="{StaticResource MaterialDesignToolBar}">

                <Button
                    Margin="4,0"
                    Command="{Binding CreateCommand}"
                    CommandParameter="{Binding Selected}"
                    Content="{materialDesign:PackIcon Kind=Add}"
                    ToolTip="Create Effect" />

                <Button
                    Margin="4,0"
                    Command="{Binding DeleteCommand}"
                    CommandParameter="{Binding Selected}"
                    Content="{materialDesign:PackIcon Kind=Delete}"
                    ToolTip="Delete Effect" />

                <Button
                    Margin="4,0"
                    Command="{Binding EditCommand}"
                    CommandParameter="{Binding Selected}"
                    Content="{materialDesign:PackIcon Kind=Edit}"
                    ToolTip="Edit Effect" />

                <Separator />

                <Button
                    Margin="4,0"
                    Command="{Binding SaveCommand}"
                    Content="{materialDesign:PackIcon Kind=ContentSave}"
                    ToolTip="Apply" />

                <Button
                    Margin="4,0"
                    Command="{Binding ReloadCommand}"
                    Content="{materialDesign:PackIcon Kind=Reload}"
                    ToolTip="Reload" />

                <Separator />

                <TextBox
                    Width="300"
                    Margin="4,0"
                    Style="{DynamicResource MaterialDesignFilledTextBox}"
                    Text="{Binding Filter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    materialDesign:HintAssist.Hint="Filter Effects …"
                    materialDesign:TextFieldAssist.HasClearButton="True" />

            </ToolBar>
        </ToolBarTray>

        <TabControl
            Padding="20"
            SelectedIndex="{Binding SelectedTab}">

            <TabItem
                x:Name="TableTab"
                Header="Table">

                <DataGrid
                    x:Name="ItemsDataGrid"
                    Margin="6,12"
                    BorderBrush="Gray"
                    BorderThickness="1"
                    ItemsSource="{Binding Items}"
                    SelectedItem="{Binding Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue={x:Static CollectionView.NewItemPlaceholder}}"
                    IsSynchronizedWithCurrentItem="True"
                    SelectionMode="Single"
                    SelectionUnit="FullRow"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserSortColumns="True"
                    CanUserReorderColumns="False"
                    CanUserResizeColumns="False"
                    CanUserResizeRows="False">

                    <DataGrid.InputBindings>
                        <MouseBinding
                            MouseAction="LeftDoubleClick"
                            Command="{Binding EditCommand}"
                            CommandParameter="{Binding SelectedItem, ElementName=ItemsDataGrid}" />
                    </DataGrid.InputBindings>

                    <DataGrid.Columns>

                        <DataGridTemplateColumn
                            Header="ID"
                            Width="1*"
                            IsReadOnly="True">

                            <DataGridTemplateColumn.HeaderStyle>
                                <Style
                                    TargetType="DataGridColumnHeader"
                                    BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">

                                    <Setter
                                        Property="HorizontalContentAlignment"
                                        Value="Right" />

                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>

                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock
                                        TextAlignment="Right">
                                        <Hyperlink
                                            Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            CommandParameter="{Binding}">
                                            <TextBlock
                                                Text="{Binding Id, Mode=OneWay}" />
                                        </Hyperlink>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>

                        </DataGridTemplateColumn>

                        <DataGridTextColumn
                            Header="Name"
                            Width="9*">

                            <DataGridTextColumn.Binding>
                                <Binding
                                    Path="Name"
                                    Mode="TwoWay"
                                    UpdateSourceTrigger="PropertyChanged"
                                    FallbackValue="element_name">
                                    <Binding.ValidationRules>
                                        <rules:RequiredRule
                                            ValidatesOnTargetUpdated="True" />
                                        <rules:NameRule
                                            ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </DataGridTextColumn.Binding>

                        </DataGridTextColumn>

                    </DataGrid.Columns>

                </DataGrid>

            </TabItem>

        </TabControl>

    </DockPanel>

</UserControl>

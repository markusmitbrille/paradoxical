<UserControl
    x:Class="Paradoxical.View.EventDetailsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:view="clr-namespace:Paradoxical.View"
    xmlns:viewmodel="clr-namespace:Paradoxical.ViewModel"
    xmlns:converters="clr-namespace:Paradoxical.Converters"
    xmlns:rules="clr-namespace:Paradoxical.ValidationRules"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance {x:Type viewmodel:EventDetailsViewModel}}"
    d:DesignWidth="800">

    <UserControl.Resources>

        <Style
            TargetType="TextBox"
            BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">

            <Setter
                Property="Margin"
                Value="6,12" />
            <Setter
                Property="materialDesign:HintAssist.FontFamily"
                Value="{StaticResource MaterialDesignFont}" />

        </Style>

        <Style
            TargetType="view:ScriptBox"
            BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">

            <Setter
                Property="Margin"
                Value="6,12" />
            <Setter
                Property="materialDesign:HintAssist.FontFamily"
                Value="{StaticResource MaterialDesignFont}" />

        </Style>

    </UserControl.Resources>

    <DockPanel>

        <ToolBarTray
            DockPanel.Dock="Top"
            Margin="20">
            <ToolBar
                ClipToBounds="False"
                Style="{StaticResource MaterialDesignToolBar}">

                <ToolBar.Resources>

                    <converters:VisibilityConverter
                        x:Key="VisibilityConverter"
                        Collapse="True" />

                </ToolBar.Resources>

                <Button
                    Margin="4,0"
                    Command="{Binding CreateCommand}"
                    Content="{materialDesign:PackIcon Kind=Creation}"
                    ToolTip="Create Event" />

                <Button
                    Margin="4,0"
                    Command="{Binding DeleteCommand}"
                    CommandParameter="{Binding Selected}"
                    Content="{materialDesign:PackIcon Kind=Delete}"
                    ToolTip="Delete Event" />

                <Button
                    Margin="4,0"
                    Command="{Binding DuplicateCommand}"
                    CommandParameter="{Binding Selected}"
                    Content="{materialDesign:PackIcon Kind=ContentDuplicate}"
                    ToolTip="Duplicate Event" />

                <Separator />

                <Button
                    Margin="4,0"
                    Command="{Binding SaveCommand}"
                    Content="{materialDesign:PackIcon Kind=ContentSave}"
                    ToolTip="Apply" />

                <Button
                    Margin="4,0"
                    Command="{Binding ReloadCommand}"
                    Content="{materialDesign:PackIcon Kind=Refresh}"
                    ToolTip="Refresh" />

                <Separator
                    Visibility="{Binding ElementName=OptionsTab, Path=IsSelected, Converter={StaticResource VisibilityConverter}}" />

                <TextBlock
                    Margin="4,2"
                    VerticalAlignment="Center"
                    Text="Options"
                    Visibility="{Binding ElementName=OptionsTab, Path=IsSelected, Converter={StaticResource VisibilityConverter}}" />

                <Button
                    Margin="4,0"
                    Command="{Binding CreateOptionCommand}"
                    Content="{materialDesign:PackIcon Kind=Creation}"
                    ToolTip="Create Option"
                    Visibility="{Binding ElementName=OptionsTab, Path=IsSelected, Converter={StaticResource VisibilityConverter}}" />

                <Button
                    Margin="4,0"
                    Command="{Binding DeleteOptionCommand}"
                    CommandParameter="{Binding ElementName=OptionsDataGrid, Path=SelectedItem}"
                    Content="{materialDesign:PackIcon Kind=Delete}"
                    ToolTip="Delete Option"
                    Visibility="{Binding ElementName=OptionsTab, Path=IsSelected, Converter={StaticResource VisibilityConverter}}" />

                <Button
                    Margin="4,0"
                    Command="{Binding EditOptionCommand}"
                    CommandParameter="{Binding ElementName=OptionsDataGrid, Path=SelectedItem}"
                    Content="{materialDesign:PackIcon Kind=Edit}"
                    ToolTip="Edit Option"
                    Visibility="{Binding ElementName=OptionsTab, Path=IsSelected, Converter={StaticResource VisibilityConverter}}" />

                <Separator
                    Visibility="{Binding ElementName=RawTab, Path=IsSelected, Converter={StaticResource VisibilityConverter}}" />

                <TextBlock
                    Margin="4,2"
                    VerticalAlignment="Center"
                    Text="Raw Override"
                    Visibility="{Binding ElementName=RawTab, Path=IsSelected, Converter={StaticResource VisibilityConverter}}" />

                <ToggleButton
                    x:Name="RawOverrideToggleButton"
                    Margin="4,2"
                    IsChecked="{Binding OverrideRaw}"
                    Command="{Binding ToggleOverrideRawCommand}"
                    CommandParameter="{Binding IsChecked, ElementName=RawOverrideToggleButton}"
                    Visibility="{Binding ElementName=RawTab, Path=IsSelected, Converter={StaticResource VisibilityConverter}}" />

            </ToolBar>
        </ToolBarTray>

        <TabControl
            Padding="20"
            SelectedIndex="{Binding SelectedTab}">

            <TabItem
                x:Name="DisplayTab"
                Header="Display">
                <Grid>

                    <Grid.RowDefinitions>
                        <RowDefinition
                            Height="auto" />
                        <RowDefinition
                            Height="auto" />
                        <RowDefinition
                            Height="*" />
                        <RowDefinition
                            Height="auto" />
                        <RowDefinition
                            Height="auto" />
                    </Grid.RowDefinitions>

                    <Grid
                        Grid.Row="0">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="1*" />
                            <ColumnDefinition
                                Width="auto" />
                        </Grid.ColumnDefinitions>

                        <TextBox
                            Grid.Column="0"
                            materialDesign:HintAssist.Hint="Name">

                            <TextBox.Text>
                                <Binding
                                    Path="Selected.Name"
                                    Mode="TwoWay"
                                    UpdateSourceTrigger="PropertyChanged"
                                    FallbackValue="element_name">
                                    <Binding.ValidationRules>
                                        <rules:RequiredRule
                                            ValidatesOnTargetUpdated="True" />
                                        <rules:NameRule
                                            ValidatesOnTargetUpdated="True" />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>

                        </TextBox>

                        <CheckBox
                            Grid.Column="1"
                            Margin="6,12"
                            Content="Hidden"
                            IsChecked="{Binding Selected.Hidden, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=false}"
                            ToolTip="If an event is hidden, fields relating to appearance and options are ignored." />

                    </Grid>

                    <view:ScriptBox
                        Grid.Row="1"
                        AcceptsReturn="False"
                        AcceptsTab="False"
                        AcceptsDot="True"
                        AllowFormatting="False"
                        AllowedCompleteItems="Localization"
                        materialDesign:HintAssist.Hint="Title">

                        <view:ScriptBox.Text>
                            <Binding
                                Path="Selected.Title"
                                Mode="TwoWay"
                                UpdateSourceTrigger="PropertyChanged">

                                <Binding.Converter>
                                    <converters:ScriptConverter />
                                </Binding.Converter>

                            </Binding>
                        </view:ScriptBox.Text>

                    </view:ScriptBox>

                    <view:ScriptBox
                        Grid.Row="2"
                        AcceptsReturn="True"
                        AcceptsTab="False"
                        AcceptsDot="True"
                        AllowFormatting="False"
                        AllowedCompleteItems="Localization"
                        materialDesign:HintAssist.Hint="Description">

                        <view:ScriptBox.Text>
                            <Binding
                                Path="Selected.Description"
                                Mode="TwoWay"
                                UpdateSourceTrigger="PropertyChanged">

                                <Binding.Converter>
                                    <converters:ScriptConverter />
                                </Binding.Converter>

                            </Binding>
                        </view:ScriptBox.Text>

                    </view:ScriptBox>

                    <TextBox
                        Grid.Row="3"
                        Text="{Binding Selected.Theme, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        materialDesign:HintAssist.Hint="Theme" />

                    <TextBox
                        Grid.Row="4"
                        materialDesign:HintAssist.Hint="Cooldown in days">

                        <TextBox.Text>
                            <Binding
                                Path="Selected.Cooldown"
                                Mode="TwoWay"
                                UpdateSourceTrigger="PropertyChanged"
                                FallbackValue="0">

                                <Binding.ValidationRules>
                                    <rules:IntRule
                                        ValidatesOnTargetUpdated="True" />
                                </Binding.ValidationRules>

                            </Binding>
                        </TextBox.Text>

                    </TextBox>

                </Grid>
            </TabItem>

            <TabItem
                x:Name="PortraitsTab"
                Header="Portraits">
                <StackPanel>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition
                                Height="auto" />
                            <RowDefinition
                                Height="auto" />
                            <RowDefinition
                                Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="*"
                                MinWidth="100" />
                            <ColumnDefinition
                                Width="*"
                                MinWidth="100" />
                        </Grid.ColumnDefinitions>

                        <TextBox
                            Grid.Row="0"
                            Grid.Column="0"
                            FontFamily="Consolas"
                            Text="{Binding LeftPortrait.Character, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Left Character" />
                        <TextBox
                            Grid.Row="1"
                            Grid.Column="0"
                            FontFamily="Consolas"
                            Text="{Binding LeftPortrait.Animation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Left Animation" />
                        <TextBox
                            Grid.Row="2"
                            Grid.Column="0"
                            FontFamily="Consolas"
                            Text="{Binding LeftPortrait.OutfitTags, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Left Outfit Tags" />

                        <TextBox
                            Grid.Row="0"
                            Grid.Column="1"
                            FontFamily="Consolas"
                            Text="{Binding RightPortrait.Character, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Right Character" />
                        <TextBox
                            Grid.Row="1"
                            Grid.Column="1"
                            FontFamily="Consolas"
                            Text="{Binding RightPortrait.Animation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Right Animation" />
                        <TextBox
                            Grid.Row="2"
                            Grid.Column="1"
                            FontFamily="Consolas"
                            Text="{Binding RightPortrait.OutfitTags, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Right Outfit Tags" />
                    </Grid>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition
                                Height="auto" />
                            <RowDefinition
                                Height="auto" />
                            <RowDefinition
                                Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="*"
                                MinWidth="100" />
                            <ColumnDefinition
                                Width="*"
                                MinWidth="100" />
                            <ColumnDefinition
                                Width="*"
                                MinWidth="100" />
                        </Grid.ColumnDefinitions>

                        <TextBox
                            Grid.Row="0"
                            Grid.Column="0"
                            FontFamily="Consolas"
                            Text="{Binding LowerLeftPortrait.Character, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Left Character" />
                        <TextBox
                            Grid.Row="1"
                            Grid.Column="0"
                            Text="{Binding LowerLeftPortrait.Animation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Left Animation" />
                        <TextBox
                            Grid.Row="2"
                            Grid.Column="0"
                            FontFamily="Consolas"
                            Text="{Binding LowerLeftPortrait.OutfitTags, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Left Outfit Tags" />

                        <TextBox
                            Grid.Row="0"
                            Grid.Column="1"
                            FontFamily="Consolas"
                            Text="{Binding LowerCenterPortrait.Character, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Center Character" />
                        <TextBox
                            Grid.Row="1"
                            Grid.Column="1"
                            FontFamily="Consolas"
                            Text="{Binding LowerCenterPortrait.Animation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Center Animation" />
                        <TextBox
                            Grid.Row="2"
                            Grid.Column="1"
                            FontFamily="Consolas"
                            Text="{Binding LowerCenterPortrait.OutfitTags, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Center Outfit Tags" />

                        <TextBox
                            Grid.Row="0"
                            Grid.Column="2"
                            FontFamily="Consolas"
                            Text="{Binding LowerRightPortrait.Character, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Right Character" />
                        <TextBox
                            Grid.Row="1"
                            Grid.Column="2"
                            FontFamily="Consolas"
                            Text="{Binding LowerRightPortrait.Animation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Right Animation" />
                        <TextBox
                            Grid.Row="2"
                            Grid.Column="2"
                            FontFamily="Consolas"
                            Text="{Binding LowerRightPortrait.OutfitTags, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Right Outfit Tags" />
                    </Grid>

                </StackPanel>
            </TabItem>

            <TabItem
                x:Name="OptionsTab"
                Header="Options">

                <DataGrid
                    x:Name="OptionsDataGrid"
                    Margin="6,12"
                    BorderBrush="Gray"
                    BorderThickness="1"
                    ItemsSource="{Binding Options}"
                    IsSynchronizedWithCurrentItem="True"
                    SelectionMode="Single"
                    SelectionUnit="FullRow"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False"
                    CanUserDeleteRows="False"
                    CanUserSortColumns="True"
                    CanUserReorderColumns="False">

                    <DataGrid.InputBindings>

                        <MouseBinding
                            MouseAction="LeftDoubleClick"
                            Command="{Binding EditOptionCommand}"
                            CommandParameter="{Binding SelectedItem, ElementName=OptionsDataGrid}" />
                        <KeyBinding
                            Key="Delete"
                            Command="{Binding DeleteOptionCommand}"
                            CommandParameter="{Binding SelectedItem, ElementName=OptionsDataGrid}" />

                    </DataGrid.InputBindings>

                    <DataGrid.Columns>

                        <DataGridTemplateColumn
                            Header="ID"
                            IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock>
                                        <Hyperlink
                                            Command="{Binding DataContext.EditOptionCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            CommandParameter="{Binding}">
                                            <TextBlock
                                                Text="{Binding Id, Mode=OneWay}" />
                                        </Hyperlink>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn
                            Header="Title"
                            Width="5*"
                            FontFamily="Consolas">

                            <DataGridTextColumn.Binding>
                                <Binding
                                    Path="Title"
                                    Mode="TwoWay"
                                    UpdateSourceTrigger="PropertyChanged">

                                    <Binding.Converter>
                                        <converters:ScriptConverter />
                                    </Binding.Converter>

                                </Binding>
                            </DataGridTextColumn.Binding>

                        </DataGridTextColumn>

                        <DataGridTextColumn
                            Header="Tooltip"
                            Width="5*"
                            FontFamily="Consolas">

                            <DataGridTextColumn.ElementStyle>
                                <Style
                                    TargetType="TextBlock">
                                    <Setter
                                        Property="TextWrapping"
                                        Value="Wrap" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>

                            <DataGridTextColumn.EditingElementStyle>
                                <Style
                                    TargetType="TextBox">
                                    <Setter
                                        Property="TextWrapping"
                                        Value="Wrap" />
                                    <Setter
                                        Property="AcceptsReturn"
                                        Value="true" />
                                </Style>
                            </DataGridTextColumn.EditingElementStyle>

                            <DataGridTextColumn.Binding>
                                <Binding
                                    Path="Tooltip"
                                    Mode="TwoWay"
                                    UpdateSourceTrigger="PropertyChanged">

                                    <Binding.Converter>
                                        <converters:ScriptConverter />
                                    </Binding.Converter>

                                </Binding>
                            </DataGridTextColumn.Binding>

                        </DataGridTextColumn>

                        <DataGridTextColumn
                            Header="Priority"
                            Width="2*"
                            Binding="{Binding Priority, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    </DataGrid.Columns>

                </DataGrid>

            </TabItem>

            <TabItem
                x:Name="TriggerTab"
                Header="Trigger">
                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="5*" />
                        <ColumnDefinition
                            Width="2*" />
                    </Grid.ColumnDefinitions>

                    <view:ElementList
                        Grid.Column="1"
                        Margin="6,12"
                        ItemsSource="{Binding Triggers}"
                        AddCommand="{Binding AddTriggerCommand}"
                        CreateCommand="{Binding CreateTriggerCommand}"
                        RemoveCommand="{Binding RemoveTriggerCommand}"
                        EditCommand="{Binding EditTriggerCommand}">
                    </view:ElementList>

                    <view:ScriptBox
                        Grid.Column="0"
                        FontFamily="Consolas"
                        AcceptsReturn="True"
                        AcceptsTab="True"
                        AcceptsDot="True"
                        AllowFormatting="True"
                        AllowedCompleteItems="Code"
                        materialDesign:HintAssist.Hint="Custom Trigger">

                        <view:ScriptBox.Text>
                            <Binding
                                Path="Selected.CustomTrigger"
                                Mode="TwoWay"
                                UpdateSourceTrigger="PropertyChanged">

                                <Binding.Converter>
                                    <converters:ScriptConverter />
                                </Binding.Converter>

                            </Binding>
                        </view:ScriptBox.Text>

                    </view:ScriptBox>

                </Grid>
            </TabItem>

            <TabItem
                x:Name="ImmediateTab"
                Header="Immediate">
                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="5*" />
                        <ColumnDefinition
                            Width="2*" />
                    </Grid.ColumnDefinitions>

                    <view:ElementList
                        Grid.Column="1"
                        Margin="6,12"
                        ItemsSource="{Binding ImmediateEffects}"
                        AddCommand="{Binding AddImmediateEffectCommand}"
                        CreateCommand="{Binding CreateImmediateEffectCommand}"
                        RemoveCommand="{Binding RemoveImmediateEffectCommand}"
                        EditCommand="{Binding EditImmediateEffectCommand}">
                    </view:ElementList>

                    <view:ScriptBox
                        Grid.Column="0"
                        FontFamily="Consolas"
                        AcceptsReturn="True"
                        AcceptsTab="True"
                        AcceptsDot="True"
                        AllowFormatting="True"
                        AllowedCompleteItems="Code"
                        materialDesign:HintAssist.Hint="Custom Effect">

                        <view:ScriptBox.Text>
                            <Binding
                                Path="Selected.CustomImmediateEffect"
                                Mode="TwoWay"
                                UpdateSourceTrigger="PropertyChanged">

                                <Binding.Converter>
                                    <converters:ScriptConverter />
                                </Binding.Converter>

                            </Binding>
                        </view:ScriptBox.Text>

                    </view:ScriptBox>

                </Grid>
            </TabItem>

            <TabItem
                x:Name="AfterTab"
                Header="After">
                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="5*" />
                        <ColumnDefinition
                            Width="2*" />
                    </Grid.ColumnDefinitions>

                    <view:ElementList
                        Grid.Column="1"
                        Margin="6,12"
                        ItemsSource="{Binding AfterEffects}"
                        AddCommand="{Binding AddAfterEffectCommand}"
                        CreateCommand="{Binding CreateAfterEffectCommand}"
                        RemoveCommand="{Binding RemoveAfterEffectCommand}"
                        EditCommand="{Binding EditAfterEffectCommand}">
                    </view:ElementList>

                    <view:ScriptBox
                        Grid.Column="0"
                        FontFamily="Consolas"
                        AcceptsReturn="True"
                        AcceptsTab="True"
                        AcceptsDot="True"
                        AllowFormatting="True"
                        AllowedCompleteItems="Code"
                        materialDesign:HintAssist.Hint="Custom Effect">

                        <view:ScriptBox.Text>
                            <Binding
                                Path="Selected.CustomAfterEffect"
                                Mode="TwoWay"
                                UpdateSourceTrigger="PropertyChanged">

                                <Binding.Converter>
                                    <converters:ScriptConverter />
                                </Binding.Converter>

                            </Binding>
                        </view:ScriptBox.Text>

                    </view:ScriptBox>

                </Grid>
            </TabItem>

            <TabItem
                x:Name="RawTab"
                Header="Raw">
                <Grid>

                    <Grid.RowDefinitions>
                        <RowDefinition
                            Height="auto" />
                        <RowDefinition
                            Height="*" />
                    </Grid.RowDefinitions>

                    <StackPanel
                        Grid.Row="0"
                        Orientation="Horizontal">

                    </StackPanel>

                    <view:ScriptBox
                        Grid.Row="1"
                        FontFamily="Consolas"
                        AcceptsReturn="True"
                        AcceptsTab="True"
                        AcceptsDot="True"
                        AllowFormatting="True"
                        AllowedCompleteItems="All"
                        materialDesign:HintAssist.Hint="Raw">

                        <view:ScriptBox.IsReadOnly>
                            <Binding
                                Path="OverrideRaw"
                                Mode="TwoWay"
                                UpdateSourceTrigger="PropertyChanged">

                                <Binding.Converter>
                                    <converters:NegationConverter />
                                </Binding.Converter>

                            </Binding>
                        </view:ScriptBox.IsReadOnly>

                        <view:ScriptBox.Text>
                            <Binding
                                Path="Raw"
                                Mode="TwoWay"
                                UpdateSourceTrigger="PropertyChanged">

                                <Binding.Converter>
                                    <converters:ScriptConverter />
                                </Binding.Converter>

                            </Binding>
                        </view:ScriptBox.Text>

                    </view:ScriptBox>

                </Grid>
            </TabItem>

        </TabControl>

    </DockPanel>

</UserControl>

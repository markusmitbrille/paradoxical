<UserControl
    x:Class="Paradoxical.View.ParadoxEventOptionView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:view="clr-namespace:Paradoxical.View"
    xmlns:viewmodel="clr-namespace:Paradoxical.ViewModel"
    xmlns:model="clr-namespace:Paradoxical.Model"
    xmlns:converters="clr-namespace:Paradoxical.Converters"
    xmlns:formatters="clr-namespace:Paradoxical.Formatters"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    d:DataContext="{d:DesignInstance Type=model:ParadoxEventOption}"
    mc:Ignorable="d"
    d:DesignHeight="900"
    d:DesignWidth="800">

    <UserControl.Resources>
        <converters:ObjectNullConverter
            x:Key="ObjectNullConverter" />
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition
                Width="*" />
            <ColumnDefinition
                Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition
                Height="auto" />
            <RowDefinition
                Height="auto" />
            <RowDefinition
                Height="auto" />
            <RowDefinition
                Height="236" />
            <RowDefinition
                Height="236" />
        </Grid.RowDefinitions>

        <TextBox
            Grid.Row="0"
            Grid.Column="0"
            Margin="4"
            IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
            Style="{DynamicResource MaterialDesignOutlinedTextBox}"
            Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            materialDesign:HintAssist.Hint="Name" />

        <TextBox
            Grid.Row="0"
            Grid.Column="1"
            Margin="4"
            IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
            Style="{DynamicResource MaterialDesignOutlinedTextBox}"
            Text="{Binding Tooltip, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            materialDesign:HintAssist.Hint="Tooltip" />

        <!-- TODO: control for selection of triggered event -->

        <TextBox
            Grid.Row="1"
            Grid.Column="1"
            Margin="4"
            IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
            Style="{DynamicResource MaterialDesignOutlinedTextBox}"
            Text="{Binding TriggeredEventScope, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            materialDesign:HintAssist.Hint="Triggered Event Scope" />

        <Grid
            Grid.Row="3"
            Grid.Column="0"
            Margin="4">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="*" />
                <RowDefinition
                    Height="auto" />
                <RowDefinition
                    Height="auto" />
            </Grid.RowDefinitions>

            <ScrollViewer
                Grid.Row="0">

                <ScrollViewer.Resources>
                    <Style
                        TargetType="ScrollBar"
                        BasedOn="{StaticResource MaterialDesignScrollBarMinimal}" />
                </ScrollViewer.Resources>

                <ItemsControl
                    Margin="0,-4"
                    ItemsSource="{Binding Triggers}">

                    <ItemsControl.Style>
                        <Style
                            TargetType="ItemsControl">
                            <Style.Triggers>
                                <Trigger
                                    Property="HasItems"
                                    Value="false">
                                    <Setter
                                        Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center"
                                                    Foreground="LightGray"
                                                    FontStyle="Italic"
                                                    Text="No triggers selected ..." />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.Style>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate
                            DataType="model:ParadoxTrigger">

                            <Button
                                Margin="0,4"
                                Style="{DynamicResource MaterialDesignOutlinedButton}"
                                Command="{Binding DataContext.RemoveTriggerCommand, RelativeSource={RelativeSource AncestorType={x:Type view:ParadoxEventOptionView}}}"
                                CommandParameter="{Binding}"
                                ToolTip="Remove Trigger">

                                <StackPanel
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Style="{DynamicResource MaterialDesignButtonTextBlock}"
                                        Text="{Binding Name}" />
                                </StackPanel>

                            </Button>

                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                </ItemsControl>

            </ScrollViewer>

            <Separator
                Grid.Row="1"
                Style="{DynamicResource MaterialDesignDarkSeparator}" />

            <Button
                Grid.Row="2"
                Margin="8"
                IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
                Style="{DynamicResource MaterialDesignFloatingActionMiniSecondaryButton}"
                Command="{Binding AddTriggerCommand}"
                Content="{materialDesign:PackIcon Kind=Plus}"
                ToolTip="Add Trigger" />

        </Grid>

        <view:ScriptBox
            Grid.Row="3"
            Grid.Column="1"
            Margin="4"
            IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
            Style="{DynamicResource MaterialDesignRichTextBox}"
            Text="{Binding Trigger, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            materialDesign:HintAssist.Hint="Custom Trigger"
            materialDesign:HintAssist.IsFloating="True"
            materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
            materialDesign:TextFieldAssist.HasOutlinedTextField="True"
            materialDesign:TextFieldAssist.TextFieldCornerRadius="4">
            <view:ScriptBox.TextFormatter>
                <formatters:CodeFormatter />
            </view:ScriptBox.TextFormatter>
        </view:ScriptBox>

        <Grid
            Grid.Row="4"
            Grid.Column="0"
            Margin="4">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="*" />
                <RowDefinition
                    Height="auto" />
                <RowDefinition
                    Height="auto" />
            </Grid.RowDefinitions>

            <ScrollViewer
                Grid.Row="0">

                <ScrollViewer.Resources>
                    <Style
                        TargetType="ScrollBar"
                        BasedOn="{StaticResource MaterialDesignScrollBarMinimal}" />
                </ScrollViewer.Resources>

                <ItemsControl
                    Margin="0,-4"
                    ItemsSource="{Binding Effects}">

                    <ItemsControl.Style>
                        <Style
                            TargetType="ItemsControl">
                            <Style.Triggers>
                                <Trigger
                                    Property="HasItems"
                                    Value="false">
                                    <Setter
                                        Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <TextBlock
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center"
                                                    Foreground="LightGray"
                                                    FontStyle="Italic"
                                                    Text="No effects selected ..." />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.Style>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate
                            DataType="model:ParadoxEffect">

                            <Button
                                Margin="0,4"
                                Style="{DynamicResource MaterialDesignOutlinedButton}"
                                Command="{Binding DataContext.RemoveEffectCommand, RelativeSource={RelativeSource AncestorType={x:Type view:ParadoxEventOptionView}}}"
                                CommandParameter="{Binding}"
                                ToolTip="Remove Effect">

                                <StackPanel
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Style="{DynamicResource MaterialDesignButtonTextBlock}"
                                        Text="{Binding Name}" />
                                </StackPanel>

                            </Button>

                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                </ItemsControl>

            </ScrollViewer>

            <Separator
                Grid.Row="1"
                Style="{DynamicResource MaterialDesignDarkSeparator}" />

            <Button
                Grid.Row="2"
                Margin="8"
                IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
                Style="{DynamicResource MaterialDesignFloatingActionMiniSecondaryButton}"
                Command="{Binding AddEffectCommand}"
                Content="{materialDesign:PackIcon Kind=Plus}"
                ToolTip="Add Effect" />

        </Grid>

        <view:ScriptBox
            Grid.Row="4"
            Grid.Column="1"
            Margin="4"
            IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
            Style="{DynamicResource MaterialDesignRichTextBox}"
            Text="{Binding Effect, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            materialDesign:HintAssist.Hint="Custom Effect"
            materialDesign:HintAssist.IsFloating="True"
            materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
            materialDesign:TextFieldAssist.HasOutlinedTextField="True"
            materialDesign:TextFieldAssist.TextFieldCornerRadius="4">
            <view:ScriptBox.TextFormatter>
                <formatters:CodeFormatter />
            </view:ScriptBox.TextFormatter>
        </view:ScriptBox>

        <Grid
            Grid.Row="2"
            Grid.Column="0">

            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="auto" />
                <RowDefinition
                    Height="auto" />
                <RowDefinition
                    Height="auto" />
                <RowDefinition
                    Height="auto" />
            </Grid.RowDefinitions>

            <TextBox
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Margin="4"
                IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
                Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                Text="{Binding AiBaseChance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Base Chance" />

            <TextBox
                Grid.Row="1"
                Grid.Column="0"
                Margin="4"
                IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
                Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                Text="{Binding AiBoldnessTargetModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Boldness" />

            <TextBox
                Grid.Row="1"
                Grid.Column="1"
                Margin="4"
                IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
                Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                Text="{Binding AiCompassionTargetModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Compassion" />

            <TextBox
                Grid.Row="1"
                Grid.Column="2"
                Margin="4"
                IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
                Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                Text="{Binding AiGreedTargetModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Boldness" />

            <TextBox
                Grid.Row="2"
                Grid.Column="0"
                Margin="4"
                IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
                Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                Text="{Binding AiEnergyTargetModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Energy" />

            <TextBox
                Grid.Row="2"
                Grid.Column="1"
                Margin="4"
                IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
                Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                Text="{Binding AiHonorTargetModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Honor" />

            <TextBox
                Grid.Row="2"
                Grid.Column="2"
                Margin="4"
                IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
                Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                Text="{Binding AiRationalityTargetModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Rationality" />

            <TextBox
                Grid.Row="3"
                Grid.Column="0"
                Margin="4"
                IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
                Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                Text="{Binding AiSociabilityTargetModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Sociability" />

            <TextBox
                Grid.Row="3"
                Grid.Column="1"
                Margin="4"
                IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
                Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                Text="{Binding AiVengefulnessTargetModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Vengefulness" />

            <TextBox
                Grid.Row="3"
                Grid.Column="2"
                Margin="4"
                IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
                Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                Text="{Binding AiZealTargetModifier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Zeal" />

        </Grid>

        <view:ScriptBox
            Grid.Row="2"
            Grid.Column="1"
            Margin="4"
            IsEnabled="{Binding Converter={StaticResource ObjectNullConverter}}"
            Style="{DynamicResource MaterialDesignRichTextBox}"
            Text="{Binding AiChance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            materialDesign:HintAssist.Hint="Custom AI Chance"
            materialDesign:HintAssist.IsFloating="True"
            materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
            materialDesign:TextFieldAssist.HasOutlinedTextField="True"
            materialDesign:TextFieldAssist.TextFieldCornerRadius="4">
            <view:ScriptBox.TextFormatter>
                <formatters:CodeFormatter />
            </view:ScriptBox.TextFormatter>
        </view:ScriptBox>

    </Grid>

</UserControl>

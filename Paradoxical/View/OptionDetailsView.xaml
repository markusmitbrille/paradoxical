<UserControl
    x:Class="Paradoxical.View.OptionDetailsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:view="clr-namespace:Paradoxical.View"
    xmlns:viewmodel="clr-namespace:Paradoxical.ViewModel"
    xmlns:formatters="clr-namespace:Paradoxical.Formatters"
    xmlns:rules="clr-namespace:Paradoxical.ValidationRules"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    d:DataContext="{d:DesignInstance {x:Type viewmodel:OptionDetailsViewModel}}"
    mc:Ignorable="d"
    d:DesignWidth="800">

    <StackPanel>

        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="*" />
            </Grid.ColumnDefinitions>

            <view:ScriptBox
                Grid.Column="0"
                Margin="6,12"
                Style="{DynamicResource MaterialDesignRichTextBox}"
                Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                ToolTip="This is not actually an element name, it is more like the title of an event."
                AcceptsReturn="False"
                materialDesign:HintAssist.Hint="Name"
                materialDesign:HintAssist.IsFloating="True"
                materialDesign:HintAssist.HelperText="Event option button text."
                materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                materialDesign:TextFieldAssist.HasOutlinedTextField="True"
                materialDesign:TextFieldAssist.TextFieldCornerRadius="4">

                <view:ScriptBox.TextFormatter>
                    <formatters:EventTextFormatter />
                </view:ScriptBox.TextFormatter>

            </view:ScriptBox>

            <view:ScriptBox
                Grid.Column="1"
                Margin="6,12"
                Style="{DynamicResource MaterialDesignRichTextBox}"
                Text="{Binding Tooltip, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                AcceptsReturn="False"
                materialDesign:HintAssist.Hint="Tooltip"
                materialDesign:HintAssist.IsFloating="True"
                materialDesign:HintAssist.HelperText="Will be displayed instead of auto-generated text."
                materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                materialDesign:TextFieldAssist.HasOutlinedTextField="True"
                materialDesign:TextFieldAssist.TextFieldCornerRadius="4">

                <view:ScriptBox.TextFormatter>
                    <formatters:EventTextFormatter />
                </view:ScriptBox.TextFormatter>

            </view:ScriptBox>

        </Grid>

        <Grid
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="2">

            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="Auto" />
                <ColumnDefinition
                    Width="Auto" />
                <ColumnDefinition
                    Width="Auto" />
                <ColumnDefinition
                    Width="Auto" />
            </Grid.ColumnDefinitions>

            <ComboBox
                Grid.Column="0"
                Margin="6,12"
                Style="{DynamicResource MaterialDesignOutlinedComboBox}"
                ItemsSource="{Binding CurrentContext.Events}"
                SelectedItem="{Binding TriggeredEvent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                DisplayMemberPath="Name"
                IsEditable="True"
                materialDesign:HintAssist.Hint="Triggered Event"
                materialDesign:HintAssist.HelperText="Follow-up event, triggered by this option." />

            <Button
                Grid.Column="1"
                Width="25"
                Height="25"
                Margin="4"
                Style="{DynamicResource MaterialDesignFloatingActionMiniSecondaryButton}"
                materialDesign:ElevationAssist.Elevation="Dp3"
                Command="{Binding DataContext.GoToElementCommand, RelativeSource={RelativeSource AncestorType=view:MainWindow}}"
                CommandParameter="{Binding TriggeredEvent}"
                Content="{materialDesign:PackIcon Kind=ArrowRight}"
                ToolTip="Go to Event" />

            <Button
                Grid.Column="2"
                Width="25"
                Height="25"
                Margin="4"
                Style="{DynamicResource MaterialDesignFloatingActionMiniSecondaryButton}"
                materialDesign:ElevationAssist.Elevation="Dp3"
                Command="{Binding FindTriggeredEventCommand}"
                CommandParameter="{Binding}"
                Content="{materialDesign:PackIcon Kind=Search}"
                ToolTip="Find Event" />

            <Button
                Grid.Column="3"
                Width="25"
                Height="25"
                Margin="4"
                Style="{DynamicResource MaterialDesignFloatingActionMiniSecondaryButton}"
                materialDesign:ElevationAssist.Elevation="Dp3"
                Command="{Binding CreateTriggeredEventCommand}"
                Content="{materialDesign:PackIcon Kind=Add}"
                ToolTip="Create Event" />

            <Button
                Grid.Column="4"
                Width="25"
                Height="25"
                Margin="4"
                Style="{DynamicResource MaterialDesignFloatingActionMiniSecondaryButton}"
                materialDesign:ElevationAssist.Elevation="Dp3"
                Command="{Binding RemoveTriggeredEventCommand}"
                CommandParameter="{Binding}"
                Content="{materialDesign:PackIcon Kind=Remove}"
                ToolTip="Remove Event" />

        </Grid>

        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="2*" />
                <ColumnDefinition
                    Width="1*" />
                <ColumnDefinition
                    Width="1*" />
            </Grid.ColumnDefinitions>

            <TextBox
                Grid.Column="0"
                Margin="6,12"
                Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                Text="{Binding TriggeredEventScope, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Event Scope"
                materialDesign:HintAssist.HelperText="Scope wherein the follow-up event will be triggered." />

            <TextBox
                Grid.Column="1"
                Margin="6,12"
                Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                materialDesign:HintAssist.Hint="Min Days"
                materialDesign:HintAssist.HelperText="Min days until triggered.">

                <TextBox.Text>
                    <Binding
                        Path="TriggeredEventMinDays"
                        Mode="TwoWay"
                        UpdateSourceTrigger="PropertyChanged"
                        FallbackValue="0">
                        <Binding.ValidationRules>
                            <rules:IntRule
                                ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>

            </TextBox>

            <TextBox
                Grid.Column="2"
                Margin="6,12"
                Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                materialDesign:HintAssist.Hint="Max Days"
                materialDesign:HintAssist.HelperText="Min days until triggered.">

                <TextBox.Text>
                    <Binding
                        Path="TriggeredEventMaxDays"
                        Mode="TwoWay"
                        UpdateSourceTrigger="PropertyChanged"
                        FallbackValue="0">
                        <Binding.ValidationRules>
                            <rules:IntRule
                                ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>

            </TextBox>

        </Grid>

        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition
                    Height="auto" />
            </Grid.RowDefinitions>

            <Grid
                Grid.Column="0">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition
                        Height="auto" />
                    <RowDefinition
                        Height="auto" />
                    <RowDefinition
                        Height="auto" />
                    <RowDefinition
                        Height="auto" />
                </Grid.RowDefinitions>

                <TextBox
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Margin="6,12"
                    Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                    materialDesign:HintAssist.Hint="Base Chance"
                    materialDesign:HintAssist.HelperText="Base chance AI will select this; modified additively by personality.">

                    <TextBox.Text>
                        <Binding
                            Path="AiBaseChance"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged"
                            FallbackValue="0">
                            <Binding.ValidationRules>
                                <rules:IntRule
                                    ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>

                <TextBox
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="6,12"
                    Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                    materialDesign:HintAssist.Hint="Boldness">

                    <TextBox.Text>
                        <Binding
                            Path="AiBoldnessTargetModifier"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged"
                            FallbackValue="0">
                            <Binding.ValidationRules>
                                <rules:IntRule
                                    ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>

                <TextBox
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="6,12"
                    Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                    materialDesign:HintAssist.Hint="Compassion">

                    <TextBox.Text>
                        <Binding
                            Path="AiCompassionTargetModifier"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged"
                            FallbackValue="0">
                            <Binding.ValidationRules>
                                <rules:IntRule
                                    ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>

                <TextBox
                    Grid.Row="1"
                    Grid.Column="2"
                    Margin="6,12"
                    Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                    materialDesign:HintAssist.Hint="Boldness">

                    <TextBox.Text>
                        <Binding
                            Path="AiGreedTargetModifier"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged"
                            FallbackValue="0">
                            <Binding.ValidationRules>
                                <rules:IntRule
                                    ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>

                <TextBox
                    Grid.Row="2"
                    Grid.Column="0"
                    Margin="6,12"
                    Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                    materialDesign:HintAssist.Hint="Energy">

                    <TextBox.Text>
                        <Binding
                            Path="AiEnergyTargetModifier"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged"
                            FallbackValue="0">
                            <Binding.ValidationRules>
                                <rules:IntRule
                                    ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>

                <TextBox
                    Grid.Row="2"
                    Grid.Column="1"
                    Margin="6,12"
                    Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                    materialDesign:HintAssist.Hint="Honor">

                    <TextBox.Text>
                        <Binding
                            Path="AiHonorTargetModifier"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged"
                            FallbackValue="0">
                            <Binding.ValidationRules>
                                <rules:IntRule
                                    ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>

                <TextBox
                    Grid.Row="2"
                    Grid.Column="2"
                    Margin="6,12"
                    Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                    materialDesign:HintAssist.Hint="Rationality">

                    <TextBox.Text>
                        <Binding
                            Path="AiRationalityTargetModifier"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged"
                            FallbackValue="0">
                            <Binding.ValidationRules>
                                <rules:IntRule
                                    ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>

                <TextBox
                    Grid.Row="3"
                    Grid.Column="0"
                    Margin="6,12"
                    Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                    materialDesign:HintAssist.Hint="Sociability">

                    <TextBox.Text>
                        <Binding
                            Path="AiSociabilityTargetModifier"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged"
                            FallbackValue="0">
                            <Binding.ValidationRules>
                                <rules:IntRule
                                    ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>

                <TextBox
                    Grid.Row="3"
                    Grid.Column="1"
                    Margin="6,12"
                    Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                    materialDesign:HintAssist.Hint="Vengefulness">

                    <TextBox.Text>
                        <Binding
                            Path="AiVengefulnessTargetModifier"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged"
                            FallbackValue="0">
                            <Binding.ValidationRules>
                                <rules:IntRule
                                    ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>

                <TextBox
                    Grid.Row="3"
                    Grid.Column="2"
                    Margin="6,12"
                    Style="{DynamicResource MaterialDesignOutlinedTextBox}"
                    materialDesign:HintAssist.Hint="Zeal">

                    <TextBox.Text>
                        <Binding
                            Path="AiZealTargetModifier"
                            Mode="TwoWay"
                            UpdateSourceTrigger="PropertyChanged"
                            FallbackValue="0">
                            <Binding.ValidationRules>
                                <rules:IntRule
                                    ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>

            </Grid>

            <view:ScriptBox
                Grid.Column="1"
                Margin="6,12"
                Style="{DynamicResource MaterialDesignRichTextBox}"
                Text="{Binding AiChance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Custom AI Chance"
                materialDesign:HintAssist.IsFloating="True"
                materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                materialDesign:TextFieldAssist.HasOutlinedTextField="True"
                materialDesign:TextFieldAssist.TextFieldCornerRadius="4">
                <view:ScriptBox.TextFormatter>
                    <formatters:CodeFormatter />
                </view:ScriptBox.TextFormatter>
            </view:ScriptBox>

        </Grid>

        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition
                    Height="250" />
            </Grid.RowDefinitions>

            <Grid
                Grid.Column="0"
                Margin="4">
                <Grid.RowDefinitions>
                    <RowDefinition
                        Height="*" />
                    <RowDefinition
                        Height="auto" />
                    <RowDefinition
                        Height="auto" />
                </Grid.RowDefinitions>

                <ScrollViewer
                    Grid.Row="0">

                    <ScrollViewer.Resources>
                        <Style
                            TargetType="ScrollBar"
                            BasedOn="{StaticResource MaterialDesignScrollBarMinimal}" />
                    </ScrollViewer.Resources>

                    <ItemsControl
                        Margin="0,-4"
                        ItemsSource="{Binding Triggers}">

                        <ItemsControl.Style>
                            <Style
                                TargetType="ItemsControl">
                                <Style.Triggers>
                                    <Trigger
                                        Property="HasItems"
                                        Value="false">
                                        <Setter
                                            Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <TextBlock
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Center"
                                                        Foreground="LightGray"
                                                        FontStyle="Italic"
                                                        Text="No triggers selected ..." />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.Style>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate
                                DataType="model:ParadoxTrigger">

                                <Grid
                                    Margin="0,4">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition
                                            Width="Auto" />
                                        <ColumnDefinition
                                            Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Stretch"
                                        Style="{DynamicResource MaterialDesignButtonTextBlock}"
                                        Text="{Binding Name}" />

                                    <Button
                                        Grid.Column="1"
                                        Width="25"
                                        Height="25"
                                        Margin="4"
                                        Style="{DynamicResource MaterialDesignFloatingActionMiniSecondaryButton}"
                                        materialDesign:ElevationAssist.Elevation="Dp3"
                                        Command="{Binding DataContext.GoToElementCommand, RelativeSource={RelativeSource AncestorType=view:MainWindow}}"
                                        CommandParameter="{Binding}"
                                        Content="{materialDesign:PackIcon Kind=ArrowRight}"
                                        ToolTip="Go to Trigger" />

                                    <Button
                                        Grid.Column="2"
                                        Width="25"
                                        Height="25"
                                        Margin="4"
                                        Style="{DynamicResource MaterialDesignFloatingActionMiniSecondaryButton}"
                                        materialDesign:ElevationAssist.Elevation="Dp3"
                                        Command="{Binding DataContext.RemoveTriggerCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                        CommandParameter="{Binding}"
                                        Content="{materialDesign:PackIcon Kind=Remove}"
                                        ToolTip="Remove Trigger" />

                                </Grid>

                            </DataTemplate>
                        </ItemsControl.ItemTemplate>

                    </ItemsControl>

                </ScrollViewer>

                <Separator
                    Grid.Row="1"
                    Style="{DynamicResource MaterialDesignDarkSeparator}" />

                <StackPanel
                    Grid.Row="2"
                    Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">

                    <Button
                        Width="25"
                        Height="25"
                        Margin="4"
                        Style="{DynamicResource MaterialDesignFloatingActionMiniSecondaryButton}"
                        materialDesign:ElevationAssist.Elevation="Dp3"
                        Command="{Binding FindTriggerCommand}"
                        Content="{materialDesign:PackIcon Kind=Search}"
                        ToolTip="Find Trigger" />

                    <Button
                        Width="25"
                        Height="25"
                        Margin="4"
                        Style="{DynamicResource MaterialDesignFloatingActionMiniSecondaryButton}"
                        materialDesign:ElevationAssist.Elevation="Dp3"
                        Command="{Binding CreateTriggerCommand}"
                        Content="{materialDesign:PackIcon Kind=Add}"
                        ToolTip="Create Trigger" />

                </StackPanel>

            </Grid>

            <view:ScriptBox
                Grid.Column="1"
                Margin="6,12"
                Style="{DynamicResource MaterialDesignRichTextBox}"
                Text="{Binding Trigger, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Custom Trigger"
                materialDesign:HintAssist.IsFloating="True"
                materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                materialDesign:TextFieldAssist.HasOutlinedTextField="True"
                materialDesign:TextFieldAssist.TextFieldCornerRadius="4">
                <view:ScriptBox.TextFormatter>
                    <formatters:CodeFormatter />
                </view:ScriptBox.TextFormatter>
            </view:ScriptBox>

        </Grid>

        <Grid>

            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="*" />
                <ColumnDefinition
                    Width="*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition
                    Height="250" />
            </Grid.RowDefinitions>

            <Grid
                Grid.Column="0"
                Margin="4">

                <Grid.RowDefinitions>
                    <RowDefinition
                        Height="*" />
                    <RowDefinition
                        Height="auto" />
                    <RowDefinition
                        Height="auto" />
                </Grid.RowDefinitions>

                <ScrollViewer
                    Grid.Row="0">

                    <ScrollViewer.Resources>
                        <Style
                            TargetType="ScrollBar"
                            BasedOn="{StaticResource MaterialDesignScrollBarMinimal}" />
                    </ScrollViewer.Resources>

                    <ItemsControl
                        Margin="0,-4"
                        ItemsSource="{Binding Effects}">

                        <ItemsControl.Style>
                            <Style
                                TargetType="ItemsControl">
                                <Style.Triggers>
                                    <Trigger
                                        Property="HasItems"
                                        Value="false">
                                        <Setter
                                            Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <TextBlock
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Center"
                                                        Foreground="LightGray"
                                                        FontStyle="Italic"
                                                        Text="No effects selected ..." />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.Style>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate
                                DataType="model:ParadoxEffect">

                                <Grid
                                    Margin="0,4">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition
                                            Width="Auto" />
                                        <ColumnDefinition
                                            Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Stretch"
                                        Style="{DynamicResource MaterialDesignButtonTextBlock}"
                                        Text="{Binding Name}" />

                                    <Button
                                        Grid.Column="1"
                                        Width="25"
                                        Height="25"
                                        Margin="4"
                                        Style="{DynamicResource MaterialDesignFloatingActionMiniSecondaryButton}"
                                        materialDesign:ElevationAssist.Elevation="Dp3"
                                        Command="{Binding DataContext.GoToElementCommand, RelativeSource={RelativeSource AncestorType=view:MainWindow}}"
                                        CommandParameter="{Binding}"
                                        Content="{materialDesign:PackIcon Kind=ArrowRight}"
                                        ToolTip="Go to Effect" />

                                    <Button
                                        Grid.Column="2"
                                        Width="25"
                                        Height="25"
                                        Margin="4"
                                        Style="{DynamicResource MaterialDesignFloatingActionMiniSecondaryButton}"
                                        materialDesign:ElevationAssist.Elevation="Dp3"
                                        Command="{Binding DataContext.RemoveEffectCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                        CommandParameter="{Binding}"
                                        Content="{materialDesign:PackIcon Kind=Remove}"
                                        ToolTip="Remove Effect" />

                                </Grid>

                            </DataTemplate>
                        </ItemsControl.ItemTemplate>

                    </ItemsControl>

                </ScrollViewer>

                <Separator
                    Grid.Row="1"
                    Style="{DynamicResource MaterialDesignDarkSeparator}" />

                <StackPanel
                    Grid.Row="2"
                    Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">

                    <Button
                        Width="25"
                        Height="25"
                        Margin="4"
                        Style="{DynamicResource MaterialDesignFloatingActionMiniSecondaryButton}"
                        materialDesign:ElevationAssist.Elevation="Dp3"
                        Command="{Binding FindEffectCommand}"
                        Content="{materialDesign:PackIcon Kind=Search}"
                        ToolTip="Find Effect" />

                    <Button
                        Width="25"
                        Height="25"
                        Margin="4"
                        Style="{DynamicResource MaterialDesignFloatingActionMiniSecondaryButton}"
                        materialDesign:ElevationAssist.Elevation="Dp3"
                        Command="{Binding CreateEffectCommand}"
                        Content="{materialDesign:PackIcon Kind=Add}"
                        ToolTip="Create Effect" />

                </StackPanel>

            </Grid>

            <view:ScriptBox
                Grid.Column="1"
                Margin="6,12"
                Style="{DynamicResource MaterialDesignRichTextBox}"
                Text="{Binding Effect, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                materialDesign:HintAssist.Hint="Custom Effect"
                materialDesign:HintAssist.IsFloating="True"
                materialDesign:TextFieldAssist.CharacterCounterVisibility="Visible"
                materialDesign:TextFieldAssist.HasOutlinedTextField="True"
                materialDesign:TextFieldAssist.TextFieldCornerRadius="4">
                <view:ScriptBox.TextFormatter>
                    <formatters:CodeFormatter />
                </view:ScriptBox.TextFormatter>
            </view:ScriptBox>

        </Grid>

    </StackPanel>

</UserControl>
